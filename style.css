.container {
    max-width: 960px;
    margin: 0;
    padding: 0 48px;
    
}

.main {
    background: rgb(242, 243, 245);
}

body {
    background: rgb(242, 243, 245);
    margin: 0;
}

nav {
    position: sticky;
    top: 0px;
    z-index: 101;
    font-weight: normal;
    font-size: 30px;
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    background-color: white;
}

.nav1 {
    height: 60px;
}

.inputValue {
    margin: 90px 0px;
    display: flex;
    width: 100%;
    height: 63px;
    border: none;
    border-bottom: 2px solid rgba(0, 0, 0, 0.2);
    background: rgb(242, 243, 245);
    font-size: 35px;
    color: black;
}

.inputValue:focus {
    outline: none;
    border-bottom: 2px solid rgb(24, 34, 235);
}

body {
    display: block;
}

.input {
    display: flex;
}

.button {
    text-align: center;
    background: #eb008d;
    font-size: 18px;
    color: #fff;
    width: 160px;
    height: 63px;
    margin: auto 0 auto 20px;
    line-height: 1.5rem;
    z-index: 0;
    border-radius: 1.2rem;
    border: 1px solid #eb008d;
    opacity: 0.3;
}

.button:hover {
    opacity: 1; 
    cursor: pointer;
}

.button:focus {
    outline: none;
}

.card {
    width: 240px;
    padding: 18px;
    margin: 6px;
    box-shadow: 3px 3px 18px;
    background: #fff;
    position: relative;

}

footer {
    background: rgb(242, 243, 245);
    display: flex;
    flex-wrap: wrap;
}

.delete {
    position: absolute;
    top: 0px;
    right: 10px;
    font-size: 30px;
    border: none;
    background: #fff;
    color: #eb008d;
    cursor: pointer;
}

.showMore {
    background: linear-gradient(rgba(242,243,245,.5),#f2f3f5);
    border: none;
    font-size: 2rem;
    margin: 0 auto;

}

.more {
    z-index: 100;
    display: flex;
    position: absolute;
    background: linear-gradient(rgba(242,243,245,.5),#f2f3f5);
    bottom: 0;
    width: 100%;
    margin: 0 auto;
    left: -1px;
    height: 0px;
    transition: 2s all;
    overflow: hidden;
}

.export {
    height: auto;
    position: relative;
    overflow: hidden;
}



/* Build an app as close as possible to the original
// HTML and CSS
2. your choice

// JavaScript
+ 3. Input and submit button
4. once user enter a city and clicks submit new city card should appear
4.2 if user enters nothing or enters incorrect city name, you can show alert box with the text "your city was not found"
5 information in a card: (city name, temperature, humidity, description)

...Good luck! :)

++bonus tasks
6. depending on the weather conditions in a city, show different icons (sun, cloud, rain and etc). Hint icons are provided by the same openweather api (e.g. https://openweathermap.org/img/w/04n.png)
7. add date "retrieved on" that shows the exact time when the weather information has been retrieved
8. add remove functionality (allows to remove single card)

Hints:
1. Don't forget to include in HTML:
<meta name="viewport" content="width=device-width, initial-scale=1">
2. Don't forget to link your HTML to style.css and script.js
3. Don't forget that you can check all sizes of every element in inspect window,
also colors and other stuff! */